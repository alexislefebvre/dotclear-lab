%class expatEngine

%left '+' '-'
%left '*' '/'
%left '!'

start 
= exp { $$=$1;}
.


exp 
= variable
| number {$$= new eaValue($1);}
| string { $$ = new eaValue($1);}
| arithmetic
| comparison
| exp logical exp  {$$ = new eaLogicalExpression($1,$3,$2);}
| '(' exp/$ ')' {$$ = new eaGroupExpression($2);}
| '!' exp {$$ = new eaNotExpression($2);}
| function
.

variable 
= varname { $$ = new eaVariable(null,$1);}
| varname '.' varname { $$= new eaVariable($1,$3);}
.

function
= varname '(' ')' { $$ = new eaFunction($1,array()); }
| varname '(' args ')' { $$ = new eaFunction($1,$3); }
.

args
= exp { $$ = array($1);}
| args ',' exp { $1[]=$3; $$ = $1;}
.


arithmetic
= exp '+' exp {$$ = new eaArithmeticExpression($1,$3,'+');}
| exp '-' exp {$$ = new eaArithmeticExpression($1,$3,'-');}
| exp '*' exp {$$ = new eaArithmeticExpression($1,$3,'*');}
| exp '/' exp {$$ = new eaArithmeticExpression($1,$3,'/');}
| exp '%' exp {$$ = new eaArithmeticExpression($1,$3,'%');}
.



comparison
= exp EQ exp {$$ = new eaComparisonExpression($1,$3,"==");}
| exp NE exp {$$ = new eaComparisonExpression($1,$3,"!=");}
| exp LT exp {$$ = new eaComparisonExpression($1,$3,"<");}
| exp GT exp {$$ = new eaComparisonExpression($1,$3,">");}
| exp LE exp {$$ = new eaComparisonExpression($1,$3,"<=");}
| exp GE exp {$$ = new eaComparisonExpression($1,$3,">=");}
.

logical
= AND|OR|XOR
.


