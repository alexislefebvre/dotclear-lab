<?php
# -- BEGIN LICENSE BLOCK ----------------------------------
# This file is part of oAuthManager, a plugin for Dotclear 2.
# 
# Copyright (c) 2009-2011 JC Denis and contributors
# jcdenis@gdwd.com
# 
# Licensed under the GPL version 2.0 license.
# A copy of this license is available in LICENSE file or at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
# -- END LICENSE BLOCK ------------------------------------
if (!defined('DC_CONTEXT_ADMIN')){return;}$manager = new oAuthManager($core);class oAuthManagerClientsList extends adminGenericList{	public function clientsDisplay($page,$nb_per_page,$url)	{		if ($this->rs->isEmpty())		{			echo '<p><strong>'.__('There is no client').'</strong></p>';		}		else		{			$pager = new pager($page,$this->rs_count,$nb_per_page,10);						$pager->base_url = $url;						$html_block =			'<table class="clear">'.			'<thead>'.			'<tr>'.			'<th class="nowrap" colspan="2">'.__('User').'</th>'.			'<th>'.__('Status').'</th>'.			'<th class="nowrap">'.__('Last update').'</th>'.			'<th class="nowrap">'.__('Expired date').'</th>'.			'<th>'.__('Service').'</th>'.			'<th>'.__('Plugin').'</th>'.			'<th>'.__('Blog').'</th>'.			'</tr>'.			'</thead>'.			'<tbody>%s</tbody>'.			'</table>';						echo '<p>'.__('Page(s)').' : '.$pager->getLinks().'</p>';			$blocks = explode('%s',$html_block);			echo $blocks[0];						$this->rs->index(((integer)$page - 1) * $nb_per_page);			$iter = 0;			while ($iter < $nb_per_page)			{				echo $this->clientsLine($url,$iter);				if ($this->rs->isEnd())				{					break;				}				else				{					$this->rs->moveNext();				}				$iter++;			}			echo $blocks[1];			echo '<p>'.__('Page(s)').' : '.$pager->getLinks().'</p>';		}	}		private function clientsLine($url,$loop)	{		if (!$this->rs->user_id) { 			$user = '<strong>'.__('Entire blog').'</strong>';		}		else {			$rs_user = $this->core->getUser($this->rs->user_id);			if (!$rs_user->isEmpty())			{				$user = 				dcUtils::getUserCN($rs_user->user_id,$rs_user->user_name,$rs_user->user_firstname,$rs_user->user_displayname).				' (<a href="'.DC_ADMIN_URL.'user.php?id='.$rs_user->user_id.'" title="'.__('User profil').'">'.$rs_user->user_id.'</a>) ';			} 			else {				$user = '<i>'.$this->rs->user_id.'<i>';			}		}				if ($this->rs->state == 2) {			$status = '<img src="images/check-on.png" alt="connected" />';		}		elseif($this->rs->state == 1) {			$status = '<img src="images/check-wrn.png" alt="partial" />';		}		else {			$status = '<img src="images/check-off.png" alt="disconnected" />';		}				$expiry = $this->rs->expiry ?			dt::str(__('%Y-%m-%d %H:%M'),strtotime($this->rs->expiry),$this->core->auth->getInfo('user_tz')) :			__('never');				$plugin = $this->core->plugins->moduleExists($this->rs->plugin_id) ?			$this->core->plugins->moduleInfo($this->rs->plugin_id,'name') : $this->rs->plugin_id;	
		$oauth_info =  oAuthClient::info($this->core,$this->rs->client_id);		if (!$oauth_info) {			$client = $this->rs->client_id;
		}
		else
		{
			if (!empty($oauth_info['name'])) {
				$client = $oauth_info['name'];
			}			if (!empty($oauth_info['url'])) {				$client = '<a href="'.$oauth_info['url'].'" title="'.__('Visit client page').'">'.$client.'</a>';			}		}				return		'<tr class="line">'.		'<td class="nowrap">'.			form::checkbox(array('clients[]'),$this->rs->uid,0).		'</td>'.		'<td class="nowrap maximal">'.$user.'</td>'.		'<td class="nowrap">'.$status.'</td>'.		'<td class="nowrap">'.			dt::str(__('%Y-%m-%d %H:%M'),strtotime($this->rs->mtime),$this->core->auth->getInfo('user_tz')).		'</td>'.		'<td class="nowrap">'.$expiry.'</td>'.		'<td class="nowrap">'.$client.'</td>'.		'<td class="nowrap">'.$plugin.'</td>'.		'<td class="nowrap">'.$this->rs->blog_id.'</td>'.		'</tr>'."\n";	}}# Actionsif (!empty($_POST['action']) && $_POST['action'] == 'delexpired'){	try {		$manager->deleteExpired();				http::redirect($p_url.'&delexpired=1');	}	catch (Exception $e) {		$core->error->add($e->getMessage());	}}if (!empty($_POST['action']) && $_POST['action'] == 'deldisconnected'){	try {		$manager->deleteDisconnected();				http::redirect($p_url.'&deldisconnected=1');	}	catch (Exception $e) {		$core->error->add($e->getMessage());	}}if (!empty($_POST['action']) && $_POST['action'] == 'disconnect' && !empty($_POST['clients'])){	try {		foreach($_POST['clients'] as $uid)		{			$manager->resetClient($uid);		}		http::redirect($p_url.'&disconnect=1');	}	catch (Exception $e) {		$core->error->add($e->getMessage());	}}if (!empty($_POST['action']) && $_POST['action'] == 'delete' && !empty($_POST['clients'])){	try {		foreach($_POST['clients'] as $uid)		{			$manager->deleteClient($uid);		}		http::redirect($p_url.'&delete=1');	}	catch (Exception $e) {		$core->error->add($e->getMessage());	}}# combo$combo_sortby = array(	__('State') => 'state',	__('Blog') => 'blog_id',	__('User') => 'user_id',	__('Plugin') => 'plugin_id',	__('Service') => 'client_id',	__('Date of update') => 'mtime');$combo_order = array(	__('Descending') => 'desc',	__('Ascending') => 'asc');$combo_clients_action = array(	__('Disconnect clients') => 'disconnect',	__('Delete clients') => 'delete');# Prepared lists$show_filters = false;$sortby = !empty($_GET['sortby']) ? $_GET['sortby'] : 'mtime';$order = !empty($_GET['order']) ? $_GET['order'] : 'desc';$page = !empty($_GET['page']) ? (integer) $_GET['page'] : 1;$nb_per_page =  30;if (!empty($_GET['nb']) && (integer) $_GET['nb'] > 0){	if ($nb_per_page != $_GET['nb']) $show_filters = true;	$nb_per_page = (integer) $_GET['nb'];}$params = array();$params['limit'] = array((($page-1)*$nb_per_page),$nb_per_page);if ($sortby != '' && in_array($sortby,$combo_sortby)){	if ($order != '' && in_array($order,$combo_order))	{		$params['order'] = $sortby.' '.$order;	}	if ($sortby != 'mtime' || $order != 'desc')	{		$show_filters = true;	}}$pager_base_url = $p_url.	'&amp;sortby='.$sortby.	'&amp;order='.$order.	'&amp;nb='.$nb_per_page.	'&amp;page=%s';try{	$clients = $manager->getClients($params);	$clients_counter = $manager->getClients($params,true)->f(0);	$clients_list = new oAuthManagerClientsList($core,$clients,$clients_counter,$pager_base_url);}catch (Exception $e){	$core->error->add($e->getMessage());}echo '<html><head><title>'.__('oAuth manager').'</title>'."\n<script type=\"text/javascript\"> \n"."$(function(){ $('.checkboxes-helpers').each(function(){dotclear.checkboxesHelpers(this);}); }); \n"."</script>\n";if (!$show_filters){	echo dcPage::jsLoad('js/filter-controls.js');}echo '</head><body><h2>'.__('oAuth manager').'</h2>';echo '<h3>'.__('Maintenance').'</h3>';if (!empty($_GET['deldisconnected'])){	echo '<p class="message">'.__('Disconnected clients successfully deleted.').'</p>';}if (!empty($_GET['delexpired'])){	echo '<p class="message">'.__('Expired clients successfully deleted.').'</p>';}echo '<div class="two-cols"><div class="col right"><form action="'.$p_url.'" method="post" id="form-actions-disconnected"><p><input type="submit" value="'.__('Delete disconnected clients').'" />'.form::hidden(array('action'),'deldisconnected').$core->formNonce().'</p></form></div><div class="col left"><form action="'.$p_url.'" method="post" id="form-actions-expired"><p><input type="submit" value="'.__('Delete expired clients').'" />'.form::hidden(array('action'),'delexpired').$core->formNonce().'</p></form></div></div><h3>'.__('Clients').'</h3>';if ($core->error->flag()){	echo '<p>'.__('An error occured when try to get list of feeds').'</p>';}else{	if (!empty($_GET['disconnect']))	{		echo '<p class="message">'.__('Clients successfully disconnected.').'</p>';	}	if (!empty($_GET['delete']))	{		echo '<p class="message">'.__('Clients successfully deleted.').'</p>';	}	if (!$show_filters) 	{		echo '<p><a id="filter-control" class="form-control" href="#">'.		__('Filters').'</a></p>';	}		echo 	'<form action="'.$p_url.'" method="get" id="filters-form">	<fieldset><legend>'.__('Filters').'</legend>	<div class="three-cols">	<div class="col">	<label>'.__('Order by:').form::combo('sortby',$combo_sortby,$sortby).'</label> 	</div>	<div class="col">	<label>'.__('Sort:').form::combo('order',$combo_order,$order).'</label>	</div>	<div class="col">	<p>	<label class="classic">'.	form::field('nb',3,3,$nb_per_page).' '.__('Clients per page').'	</label> 	<input type="submit" value="'.__('filter').'" />'.	form::hidden(array('p'),'oAuthManager').'	</p>	</div>	</div>	<br class="clear" />	</fieldset>	</form>	<form action="'.$p_url.'" method="post" id="form-actions">';		$clients_list->clientsDisplay($page,$nb_per_page,$pager_base_url);		echo '	<div class="two-cols">	<p class="col checkboxes-helpers"></p>	<p class="col right">'.__('Selected clients action:').' '.	form::combo(array('action'),$combo_clients_action).'	<input type="submit" value="'.__('ok').'" />'.	form::hidden(array('sortby'),$sortby).	form::hidden(array('order'),$order).	form::hidden(array('page'),$page).	form::hidden(array('nb'),$nb_per_page).	form::hidden(array('p'),'oAuthManager').	$core->formNonce().'	</p>	</div>	</form>';}dcPage::helpBlock('oAuthManager');echo '<hr class="clear"/><p class="right">oAuthManager - '.$core->plugins->moduleInfo('oAuthManager','version').'&nbsp;<img alt="'.__('oAuth manager').'" src="index.php?pf=oAuthManager/icon.png" /></p></body></html>';?>