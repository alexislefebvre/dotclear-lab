<?php
# -- BEGIN LICENSE BLOCK ----------------------------------
# This file is part of soCialMe, a plugin for Dotclear 2.
# 
# Copyright (c) 2009-2011 JC Denis and contributors
# jcdenis@gdwd.com
# 
# Licensed under the GPL version 2.0 license.
# A copy of this license is available in LICENSE file or at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
# -- END LICENSE BLOCK ------------------------------------
if (!defined('DC_CONTEXT_ADMIN')){return;}dcPage::check('admin');# Plugin pages definitions$nav = array(	'sharer' => array(		'title' => __('Sharer'),		'description' => __('Help your visitors to share content of your blog on social networks.'),		'ns' => 'soCialMeSharer',		'parts' => array(			'location' => __('Locations'),			'order' => __('Orders'),			'service' => __('Services'),			'setting' => __('Settings')		),		'common' => array('order','service','setting')	),	'profil' => array(		'title' => __('Profil'),		'description' => __('Show your social profiles and counters.'),		'ns' => 'soCialMeProfil',		'parts' => array(			'location' => __('Locations'),			'order' => __('Orders'),			'service' => __('Services'),			'setting' => __('Settings')		),		'common' => array('order','service','setting')	),	'writer' => array(		'title' => __('Writer'),		'description' => __('Send and share content from your blog to your social networks.'),		'ns' => 'soCialMeWriter',		'parts' => array(			'message' => __('Message'),			'event' => __('Events'),			'service' => __('Services')			//,'setting' => __('Settings')		),		'common' => array('service')	),	'reader' => array(		'title' => __('Reader'),		'description' => __('Add feeds and other stream from social networks to your blog.'),		'ns' => 'soCialMeReader',		'parts' => array(			'action' => __('Feeds'),			'service' => __('Services'),			'setting' => __('Settings')		),		'common' => array('service','setting')	));# Request URI$request_page = !empty($_REQUEST['page']) ? $_REQUEST['page'] : null;$request_part = !empty($_REQUEST['part']) ? $_REQUEST['part'] : null;$request_lib = !empty($_REQUEST['lib']) ? $_REQUEST['lib'] : null;$request_section = !empty($_REQUEST['section']) ? $_REQUEST['section'] : null;$request_act = !empty($_REQUEST['act']) ? $_REQUEST['act'] : null;# Other pageif (isset($nav[$request_page])){	# Shortcut	$page = $nav[$request_page];	$page['setting'] = $core->blog->settings->{$page['ns']};	# Load all services class for sharer	try	{		$page['class'] = new $page['ns']($core);	}	catch (Exception $e)	{		$core->error->add($e->getMessage());	}		# Set default part	if (!isset($page['parts'][$request_part]))	{		$request_part = $_REQUEST['part'] = key($page['parts']);	}		# user a common page for all parts	if (in_array($request_part,$page['common']))	{		$index = dirname(__FILE__).'/inc/lib.index.'.$request_part.'.php';	}	# Load another part	else	{		$index = dirname(__FILE__).'/inc/index.'.$request_page.'.'.$request_part.'.php';	}		if (file_exists($index))	{		require $index;	}}# Home page of pluginelse{	# Read settings	foreach($nav as $page => $v)	{		$s[$page] = (boolean) $core->blog->settings->{$v['ns']}->active;	}		# Save settings	if ($request_act == 'save')	{		try		{			foreach($nav as $page => $v)			{				$s[$page] = !empty($_POST['s_'.$page]);				$core->blog->settings->{$v['ns']}->put('active',$s[$page],'boolean');			}						$core->blog->triggerBlog();						http::redirect($p_url);		}		catch (Exception $e)		{			$core->error->add($e->getMessage());		}	}	# soCialMe menu	echo soCialMeUtils::top().'	<form id="main-form" method="post" action="'.soCialMeUtils::link(1,'writer').'">	<div class="two-cols">';		$i = 0;	foreach($nav as $page => $v)	{		if ($i == 2) {			$i = 0;			echo '</div><div class="two-cols">';		}		$i++;				echo '		<div class="col"><div class="socialbox">		<h4><a href="'.soCialMeUtils::link(1,$page).'" title="'.__('Administrate').'">'.$v['title'].'</a></h4>		<p>'.$v['description'].'</p>';
		if ($page == 'reader') { //hey this is a beta !
			echo '<p>'.__('Social Reader is not yet implemented').'</p';
		}
		else {
			echo '<p><label class="classic">'.form::checkbox(array('s_'.$page),'1',$s[$page]).__('Enable this part').'</label></p>';
		}
		echo '		</div></div>';	}		echo 	'</div>'.	'<p class="clear">&nbsp;</p>'.	'<div class="clear">'.	'<p><input type="submit" name="save" value="'.__('save').'" />'.	$core->formNonce().	form::hidden(array('p'),'soCialMe').	form::hidden(array('page'),'').	form::hidden(array('part'),'').	form::hidden(array('act'),'save').	'</p></div>'.	'</form>';	# so.cial.me news	$feed_reader = new feedReader;	$feed_reader->setCacheDir(DC_TPL_CACHE);	$feed_reader->setTimeout(2);	$feed_reader->setUserAgent('Dotclear - http://www.dotclear.org/');	$feed = $feed_reader->parse(SOCIALME_RSS_NEWS);		if ($feed->items)	{		echo '<hr class="clear" /><h3>'.__('Latest news from so.cial.me').'</h3><dl id="news">';		$i = 1;		foreach ($feed->items as $item)		{			$dt = isset($item->link) ? '<a href="'.$item->link.'">'.$item->title.'</a>' : $item->title;						if ($i < 3) {				echo 				'<dt>'.$dt.'</dt>'.				'<dd><p><strong>'.dt::dt2str('%d %B %Y',$item->pubdate,'Europe/Paris').'</strong>: '.				'<em>'.text::cutString(html::clean($item->content),350).'...</em></p></dd>';			} else {				echo 				'<dt>'.$dt.'</dt>'.				'<dd>'.dt::dt2str('%d %B %Y',$item->pubdate,'Europe/Paris').'</dd>';			}			$i++;			if ($i > 7) { break; }		}		echo  '</dl>';	}}echo '</div><hr class="clear" /><div class="two-cols"><div class="col">';if (isset($nav[$request_page])){	echo '- ';	foreach($nav as $page => $v)	{		echo '<a href="'.soCialMeUtils::link(1,$page).'" title="'.$v['description'].'">'.$v['title'].'</a> - ';	}}echo '&nbsp;</div><div class="col"><p class="right">soCialMe - '.$core->plugins->moduleInfo('soCialMe','version').'&nbsp;<img alt="'.__('soCialMe').'" src="index.php?pf=soCialMe/icon.png" /></p></div></div></body></html>';?>